local Rarity = {"Common"}
local Event = game.ReplicatedStorage.PetEvent
local Common = game.ReplicatedStorage.Pets.Common:GetChildren()
local Epic = game.ReplicatedStorage.Pets.Epic:GetChildren()
local Legendary = game.ReplicatedStorage.Pets.Legendary:GetChildren()
local Rare = game.ReplicatedStorage.Pets.Rare:GetChildren()



local function TypeWrite(object, Text)
	for i = 1, #Text do
		object.Text = string.sub(Text,1,i)
		wait(0.05)
	end
end

Event.OnServerEvent:Connect(function(plr)
	local PlayerInventory = plr.Character.PlayerPets
	local PetNameText = plr.PlayerGui:WaitForChild("PetHatchScreen").PetFrame.PetName
	local PetTypeText = plr.PlayerGui:WaitForChild("PetHatchScreen").PetFrame.PetType
	local Egg = plr.PlayerGui:WaitForChild("PetHatchScreen").PetFrame.ImageLabel
	local PetHatchScreen = plr.PlayerGui:WaitForChild("PetHatchScreen")
	local result = Rarity[math.random(1,#Rarity)]
	local PetImage = plr.PlayerGui:WaitForChild("PetHatchScreen").PetFrame.PetImage
	
	local PetImageDefSize = PetImage.Size
	
	
	local function ResetDefault()
		PetImage.Size = PetImageDefSize
		Egg.Visible = true
		plr.PlayerGui.PetHatchScreen.Enabled = false
		PetNameText.Text = ""
		PetTypeText.Text = ""
	end
---------------------------THE ACTUAL SYSTEM---------------------------------------
	
	 if result == "Common" then
		local ObtainedPet = Common[math.random(1,#Common)]
		local ViewPet = ObtainedPet:Clone()
		ObtainedPet.Parent = plr.PetInventory	
		-- The UI Features
		PetHatchScreen.Enabled  = true
		PetNameText.TextColor = BrickColor.new(0, 1, 1)
		TypeWrite(PetNameText, ObtainedPet.Name)
		PetTypeText.TextColor = BrickColor.new(0.333333, 1, 1)
		TypeWrite(PetTypeText, "Common")
		Egg.Visible = false
		-- Image
		local FoundImage = game.ReplicatedStorage.Images:FindFirstChild(ObtainedPet.Name)
		PetImage.Image = FoundImage.Texture
		wait(3)
		ResetDefault()
	elseif result == "Rare" then	
		local ObtainedPet = Rare[math.random(1,#Rare)]
		local ViewPet = ObtainedPet:Clone()
		ObtainedPet.Parent = plr.PetInventory
		PetHatchScreen.Enabled  = true
		PetNameText.TextColor = BrickColor.new(0, 1, 1)
		TypeWrite(PetNameText, ObtainedPet.Name)
		PetTypeText.TextColor = BrickColor.new(0.333333, 1, 1)
		TypeWrite(PetTypeText, "Rare")
		Egg.Visible = false
		local FoundImage = game.ReplicatedStorage.Images:FindFirstChild(ObtainedPet.Name)
		PetImage.Image = FoundImage.Texture
		PetImage.Visible = true
		wait(3)
		ResetDefault()
	elseif result == "Epic" then
		local ObtainedPet = Epic[math.random(1,#Epic)]
		local ViewPet = ObtainedPet:Clone()
		ObtainedPet.Parent = plr.PetInventory	
		PetHatchScreen.Enabled  = true
		PetNameText.TextColor = BrickColor.new(0, 1, 1)
		TypeWrite(PetNameText, ObtainedPet.Name)
		PetTypeText.TextColor = BrickColor.new(0.333333, 1, 1)
		TypeWrite(PetTypeText, "Epic")
		Egg.Visible = false
		local FoundImage = game.ReplicatedStorage.Images:WaitForChild(ObtainedPet.Name)
		PetImage.Image = FoundImage.Texture
		wait(3)
		ResetDefault()
	elseif result == "Legendary" then
		local ObtainedPet = Legendary[math.random(1,#Legendary)]
		local ViewPet = ObtainedPet:Clone()
		ObtainedPet.Parent = plr.PetInventory	
		PetHatchScreen.Enabled  = true
		PetNameText.TextColor = BrickColor.new(0, 1, 1)
		TypeWrite(PetNameText, ObtainedPet.Name)
		PetTypeText.TextColor = BrickColor.new(0.333333, 1, 1)
		TypeWrite(PetTypeText, "Legendary")
		Egg.Visible = false
		local FoundImage = game.ReplicatedStorage.Images:FindFirstChild(ObtainedPet.Name)
		PetImage.Image = FoundImage.Texture
		wait(3)
		ResetDefault()
	end
end)

